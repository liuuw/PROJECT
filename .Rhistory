filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)
%>%ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar()
+labs(x = 'X Axis Title', y = 'Y Axis Title')
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar()
+ labs(x = 'X Axis Title')
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() + labs(x = 'X Axis Title', y = 'Y Axis Title')
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title')
labs(x = 'X Axis Title', y = 'Y Axis Title') + labs(fill = element_blank()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title') + labs(fill = element_blank())
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title') + labs(fill = element_blank())
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title', fill = element_blank())
donor %>%
ggplot(aes(primary_general, fill = primary_general)) +
geom_bar() +
labs(
x = 'Election Type'
, y = 'Donations (#)'
, fill = element_blank()
, title = 'Number of Donations by Election Type'
, subtitle = 'Over 6,000 full election cycle donations'
)
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title', title = 'Here I can put the title'
, subtitle = "Here's the subtitle", fill = element_blank())
install.packages('scales')
library(scales)
install.packages("scales")
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title', title = 'Here I can put the title'
, subtitle = "Here's the subtitle",scale_y_continuous(labels = percent) ,fill = element_blank())
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title', title = 'Here I can put the title'
, subtitle = "Here's the subtitle", fill = element_blank()) +
scale_y_continuous(labels = percent)
install.packages('ggthemes')
library(ggthemes)
install.packages("ggthemes")
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title', title = 'Here I can put the title'
, subtitle = "Here's the subtitle", fill = element_blank()) +
scale_y_continuous(labels = percent)+
theme_economist() + scale_colour_economist()
, subtitle = "Here's the subtitle", fill = element_blank()) +
scale_y_continuous(labels = percent)+
theme_stata() + scale_colour_stata()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title', title = 'Here I can put the title'
, subtitle = "Here's the subtitle", fill = element_blank()) +
scale_y_continuous(labels = percent)+
theme_stata() + scale_colour_stata()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K')
& event_clearance_group %in%
c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
)%>%
ggplot(aes(district_sector,fill =event_clearance_group )) + geom_bar() +
labs(x = 'X Axis Title', y = 'Y Axis Title', title = 'Here I can put the title'
, subtitle = "Here's the subtitle", fill = element_blank()) +
scale_y_continuous(labels = percent)+
theme_economist() + scale_colour_economist()
donor %>%
ggplot(aes(police, Payment_and_value_of_care_._Hospital)) + geom_point()
str(donor)
summary(donor)
donor %>%
ggplot(aes(ballot_number, report_number)) + geom_point()
donor %>%
ggplot(aes(ballot_number, amount)) + geom_point()
donor %>%
ggplot(aes(election_year, amount)) + geom_point()
donor %>% group_by(anount, contributor_employer_state) %>% summarise(dollars = mean(amount, na.rm = TRUE))
donor %>% group_by(amount, contributor_employer_state) %>% summarise(dollars = mean(amount, na.rm = TRUE))
donor %>%
group_by(amount, contributor_employer_state) %>%
summarise(dollars = mean(amount, na.rm = TRUE))%>%
filter(! contributor_state %in% NA) %>%
ggplot(aes(reorder(contributor_state, -avg_amount), avg_amount)) +
geom_bar(stat = 'identity') +
scale_y_continuous(labels = dollar) + theme_classic()
donor %>%
group_by(contributor_state) %>%
summarise(avg_amount = mean(amount, na.rm = TRUE)) %>%
filter(! contributor_state %in% NA) %>%
ggplot(aes(reorder(contributor_state, -avg_amount), avg_amount)) +
geom_bar(stat = 'identity') +
scale_y_continuous(labels = dollar) + theme_classic()
donor %>%
group_by(contributor_employer_state) %>%
summarise(avg_amount = mean(amount, na.rm = TRUE)) %>%
filter(! contributor_state %in% NA) %>%
ggplot(aes(reorder(contributor_emplyer_state, -avg_amount), avg_amount)) +
geom_bar(stat = 'identity') +
scale_y_continuous(labels = dollar) + theme_classic()
donor %>%
group_by(contributor_state) %>%
summarise(avg_amount = mean(amount, na.rm = TRUE)) %>%
filter(! contributor_state %in% NA) %>%
ggplot(aes(reorder(contributor_state, -avg_amount), avg_amount)) +
geom_bar(stat = 'identity') +
scale_y_continuous(labels = dollar) + theme_classic()
donor %>%
group_by(contributor_state)
summary(police)
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
filter(!event_clearance_minute %>% NA) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity')+
scale_y_continuous(label= mins) +
theme_economist() + scale_colour_economist()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
filter(!district_sector %>% NA) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity')+
scale_y_continuous(label= mins) +
theme_economist() + scale_colour_economist()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity')+
scale_y_continuous(label= mins) +
theme_economist() + scale_colour_economist()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity')+
scale_y_continuous(label= mins) +
theme_economist() + scale_colour_economist())
summary(police)
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity')+
scale_y_continuous(labels = mins) +
theme_economist() + scale_colour_economist())
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity'))+
scale_y_continuous(labels = mins) +
theme_economist() + scale_colour_economist()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity'))+
scale_y_continuous(labels = dollar) +
theme_economist() + scale_colour_economist()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity')) +
theme_economist() + scale_colour_economist()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity')) + theme_classic()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity') + theme_classic()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district_sector, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity') + theme_classic()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minutes, na.rm=TRUE) ) %>%
ggplot(aes(district_sector, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity') + theme_classic()
summary(police
)
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minutes, na.rm=TRUE) ) %>%
ggplot(aes(district_sector, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity') + theme_classic()
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district_sector, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity') + theme_classic()
View(dat)
police%>%
group_by(district_sector)%>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district_sector, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity') + theme_classic()
police %>%
filter(
! event_clearance_ampm %in% NA &
! event_clearance_group %in% NA
) %>%
group_by(event_clearance_group, event_clearance_ampm) %>%
summarise(n = n()) %>%
ungroup %>%
group_by(event_clearance_group) %>%
mutate(total = sum(n, na.rm = TRUE)) %>%
filter(total >= 100) %>%
ggplot(aes(reorder(event_clearance_group, n), n, fill = event_clearance_ampm)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme_wsj() +
scale_colour_wsj() +
labs(title = 'Most incidence occur in the AM', fill = 'Time of Day')
police%>%
group_by(district_sector)%>%
filter(! event_clearance_ampm %in% NA) %>%
summarise(Average_time_does_it_take = mean(event_clearance_minute, na.rm=TRUE) ) %>%
ggplot(aes(district_sector, event_clearance_minute), title = 'Efficency of the police')+
geom_bar(stat='identity') + theme_classic()
police%>%
group_by(district_sector)%>%
filter(! event_clearance_ampm %in% NA) %>%
summarise(Average_time_does_it_take = mean(event_clearance_ampm, na.rm=TRUE) ) %>%
ggplot(aes(district_sector,event_clearance_ampm ), title = 'Efficency of the police')+
geom_bar(stat='identity') + theme_classic()
library(rvest)
library(tidyverse)
h <- read_html("https://en.wikipedia.org/wiki/Current_members_of_the_United_States_House_of_Representatives …")
reps <- h %>%
html_node("#mw-content-text > div > table:nth-child(18)") %>%
html_table()
reps <- reps[,c(1:2,4:9)] %>%
as_tibble() pic.twitter.com/25ANm7BHkj
h <- read_html("https://en.wikipedia.org/wiki/Current_members_of_the_United_States_House_of_Representatives …")
reps <- h %>%
html_node("#mw-content-text > div > table:nth-child(18)") %>%
html_table()
reps <- reps[,c(1:2,4:9)] %>%
as_tibble() pic.twitter.com/25ANm7BHkj
h <- read_html("https://en.wikipedia.org/wiki/Current_members_of_the_United_States_House_of_Representatives …")
h <- read_html("https://en.wikipedia.org/wiki/Current_members_of_the_United_States_House_of_Representatives")
reps <- h %>%
html_node("#mw-content-text > div > table:nth-child(18)") %>%
html_table()
reps <- reps[,c(1:2,4:9)] %>%
as_tibble() pic.twitter.com/25ANm7BHkj
reps
h <- read_html("https://en.wikipedia.org/wiki/Current_members_of_the_United_States_House_of_Representatives")
reps <- h %>%
html_node("#mw-content-text > div > table:nth-child(18)") %>%
html_table()
reps <- reps[,c(1:2,4:9)] %>% as_tibble()
h <- read_html("https://en.wikipedia.org/wiki/Democracy_Index")
reps <- h %>%
html_node("#mw-content-text > div > table:nth-child(18)") %>%
html_table()
reps <- reps[,c(1:2,4:9)] %>% as_tibble()
pressLink='https://raw.githubusercontent.com/EvansDataScience/data/master/pressfreedom.csv'
corruptLink='https://raw.githubusercontent.com/EvansDataScience/data/master/corruption.csv'
econoLink='https://raw.githubusercontent.com/EvansDataScience/data/master/economic.csv'
enviroLink='https://raw.githubusercontent.com/EvansDataScience/data/master/environment.csv'
pressLink='https://raw.githubusercontent.com/EvansDataScience/data/master/pressfreedom.csv'
press=read.csv(pressLink,stringsAsFactors = F)
indexes1=merge(corrupt,econo)
indexes2=merge(press,enviro)
indexes=merge(indexes1,indexes2)
corrupt=read.csv(corruptLink,stringsAsFactors = F)
econo=read.csv(econoLink,stringsAsFactors = F)
enviro=read.csv(enviroLink,stringsAsFactors = F)
press=read.csv(pressLink,stringsAsFactors = F)
indexes1=merge(corrupt,econo)
indexes2=merge(press,enviro)
indexes=merge(indexes1,indexes2)
str(indexes)
summary(indexes)
library(psych)
indexes$scorepressOK=reverse.code(-1,indexes$scorepress)
library(psych)
indexes$scorepressOK=reverse.code(-1,indexes$scorepress)
indexes$presscat=as.factor(indexes$presscat)
indexes$environmentCat=as.factor(indexes$environmentCat)
hist(indexes$environment)
par(mfrow=c(1,2))
hist(indexes$environment)
explanans=names(indexes)[c(3,4,9)]
for (x in explanans){
par=cbind(indexes[,x],indexes$environment)
p=cor.test(indexes[,x],indexes$environment)
print(paste("Pearson:",p$estimate," - Is significative?",p$p.value<0.05))
}
cor(indexes[explanans])
row.names(indexes)=indexes$Country
LinRegEPI = lm(environment ~ corruptionIndex + scoreEconomy + scorepressOK,
data = indexes)
summary(LinRegEPI)
barplot(table(indexes$environmentCat))
barplot(table(indexes$environmentCat))
data.frame(CoefficientExp=exp(results[,1]),Significant=results[,4]<0.05)
# function 'glm' !
LogitEPI_a =glm(environmentCat ~ corruptionIndex + scoreEconomy + scorepressOK,
data = indexes,
family = binomial())
# see full results: summary(LogitEPI_a)
# see relevant info on coefficients:
results=coef(summary(LogitEPI_a))
data.frame(CoefficientExp=exp(results[,1]),Significant=results[,4]<0.05)
getwd()
setwd("/Users/liu/Documents/GitHub/PROJECT")
dropout<-read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vT0toyGGV26hDjrud5Ml1o-ITURpFKkOX5_zmakPa0CjjRlVKzrEHpI7pRdaQrRUI97qHI_IPbklPk7/pub?output=csv")
dim(dropout)
names(dropout)
table(dropout$Median.household.income.2012)
table(dropout$unemployment.rate)
table(dropout$single.female.with.children)
distribution=table(dropout$single.female.with.children)
chisq.test(distribution)
#I'm interested in the relationship between the dropout rate (My dependent variable) and
# My independent variables :
#1. Median household income in 2012
#2. Unemployment rate
#3. The rate of single mothers raising children
install.packages("car")
library(car)
scatterplotMatrix(dropout[,c(3:5)], diagonal='histogram',reg.line=NULL , smoother=NULL,legend.plot=F)
head(dropout)
data<- dropout[,3:5]
par(mfrow=c(1,2))
E.dist<- dist (data, method='euclidean')
Clustering <-hclust(E.dist ,method="average")
plot(Clustering, xlab='Clustering for the dropout')
abline(h=6000, col="red")
dim(data)
dropout<-read.csv("https://github.com/liuuw/PROJECT/raw/master/DROUPOUT.csv")
dim(dropout)
names(dropout)
donor <- read.csv('https://goo.gl/tm9JQ5')
c('MICROSOFT', 'THE COCA-COLA COMPANY', 'NUCOR STEEL SEATTLE, INC.', 'FARMERS INSURANCE', 'UNIVERSITY OF WASHINGTON')
library('tidyverse')
, 'UNIVERSITY OF WASHINGTON')) %>%
group_by() %>%
summarise()
, 'UNIVERSITY OF WASHINGTON')) %>%
group_by() %>%
summarise()
donor <- read.csv('https://goo.gl/tm9JQ5')
c('MICROSOFT', 'THE COCA-COLA COMPANY', 'NUCOR STEEL SEATTLE, INC.', 'FARMERS INSURANCE', 'UNIVERSITY OF WASHINGTON')
library('tidyverse')
donor %>%
filter(contributor_employer_name %in% c('MICROSOFT', 'THE COCA-COLA COMPANY'
, 'NUCOR STEEL SEATTLE, INC.'
, 'FARMERS INSURANCE'
, 'UNIVERSITY OF WASHINGTON')) %>%
group_by() %>%
summarise()
donor %>%
filter(contributor_employer_name %in% c('MICROSOFT', 'THE COCA-COLA COMPANY'
, 'NUCOR STEEL SEATTLE, INC.'
, 'FARMERS INSURANCE'
, 'UNIVERSITY OF WASHINGTON')) %>%
group_by() %>%
summarise()
, 'UNIVERSITY OF WASHINGTON')) %>%
group_by(contributor_employer_name) %>%
summarise(avg_amount = mean(amount), max_amount = max(amount))
, 'UNIVERSITY OF WASHINGTON')) %>%
group_by(contributor_employer_name) %>%
summarise(
, 'UNIVERSITY OF WASHINGTON')) %>%
group_by(contributor_employer_name) %>%
summarise(avg_amount = mean(amount), max_amount = max(amount))
donor <- read.csv('https://goo.gl/tm9JQ5')
donor %>%
filter(contributor_employer_name %in% c('MICROSOFT', 'THE COCA-COLA COMPANY'
, 'NUCOR STEEL SEATTLE, INC.'
, 'FARMERS INSURANCE'
, 'UNIVERSITY OF WASHINGTON')) %>%
group_by(contributor_employer_name) %>%
summarise(avg_amount = mean(amount), max_amount = max(amount))
library("ggplot")
library("ggplot2")
donor1 <- donor %>%
filter(contributor_employer_name %in% c('MICROSOFT', 'THE COCA-COLA COMPANY'
, 'NUCOR STEEL SEATTLE, INC.'
, 'FARMERS INSURANCE'
, 'UNIVERSITY OF WASHINGTON'))
donor_sds %>% ggplot(aes())
donor1 %>% ggplot(aes(party)) + geom_bar() + theme_economist() +
labs(x = '', y = 'Donations (#)')
library(ggthemes)
donor1 <- donor %>%
filter(contributor_employer_name %in% c('MICROSOFT', 'THE COCA-COLA COMPANY'
, 'NUCOR STEEL SEATTLE, INC.'
, 'FARMERS INSURANCE'
, 'UNIVERSITY OF WASHINGTON'))
donor1 %>% ggplot(aes(party)) + geom_bar() + theme_economist() +
labs(x = '', y = 'Donations (#)')
donor1 <- donor %>%
filter(contributor_employer_name %in% c('MICROSOFT', 'THE COCA-COLA COMPANY'
, 'NUCOR STEEL SEATTLE, INC.'
, 'FARMERS INSURANCE'
, 'UNIVERSITY OF WASHINGTON'))%>%
mutate(party = ifelse(party %in% NA, 'Unknown', as.character(party)))
donor1 %>% ggplot(aes(party)) + geom_bar() + theme_economist() +
labs(x = '', y = 'Donations (#)')
View(enviro)
install.packages(c('rmarkdown', 'kintr'))
police %>% group_by(event_clearance_ampm) %>% summarise(n = n()) %>% kable(format = 'markdown')
install.packages(c("rmarkdown", "kintr"))
install.package("kintr")
install.packages("kintr")
install.packages('kintr')
install.packages('kintR')
install.packages('knitr', dependencies = TRUE)
install.packages("knitr", dependencies = TRUE)
library(knitr)
police %>% group_by(event_clearance_ampm) %>% summarise(n = n()) %>% kable(format = 'markdown')
library(tidyverse)
library(knitr)
library(tidyverse)
police %>% group_by(event_clearance_ampm) %>% summarise(n = n()) %>% kable(format = 'markdown')
